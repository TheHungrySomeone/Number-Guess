#!/bin/bash
clear

# Asks the user for a nickname, and starts the game by asking the user to enter the number
echo 'Please enter a nickname.'
read -p '> ' n

# Uncomment the line below to log the nicknames people enter, but only do this after folowing the directions for this on the readme (https://github.com/TheHungrySomeone/Number-Guess/blob/main/README.md).
#echo $n >> /home/number/names.txt

echo 'Welcome, '$n'.  Please guess a number from 1 to 100.'
read -p '> ' x

# Chooses a random number so the user doesn't have to edit it manually
number=$(echo $(( $RANDOM % 100 + 1 )))

# All of this is for the computer to know if it's too high or too low.  This ends when the user picks the right number.
while [[ $x -ne $number ]]
do

if [[ $x -gt $number  && $x -le 100 ]]; then
  echo 'Too high.  Try again.'
  read -p '> ' x
fi

if [[ $x -lt $number && $x -ge 1 ]]; then
  echo 'Too low.  Try again.'
  read -p '> ' x
fi

if [[ $x -lt 1 ]]; then
  echo 'That is less than 1.  Try again.'
  read -p '> ' x
fi

if [[ $x -gt 100 ]]; then
  echo 'That is more than 100.  Try again.'
  read -p '> ' x
fi

done

# This is to end the game, and it asks if the user want's to play again.
if [[ $x -eq $number ]]; then
  echo 'YOU WON!!!'
  read -p 'Would you like to to play again? [Y/n]: ' t
fi


if [[ ($t == n || $t == N) ]]; then
echo 'Bye, '$n'!  Come back soon!'
sleep 0.5s
exit 0
fi

if [[ $t == y || $t == Y ]]; then
exec bash "$0" "$@"
fi
